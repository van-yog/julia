{"version":3,"sources":["apiService.js","index.js"],"names":["BASE_URL","KEY","fetchImage","value","page","fetch","then","response","json","refs","container","document","querySelector","gallery","searchBtn","undefined","searchForm","loadMoreBtn","searchValue","renderForm","insertAdjacentHTML","onSubmit","e","preventDefault","currentTarget","elements","query","trim","childNodes","length","innerHTML","remove","images","showImages","children","addLoadMoreBtn","catch","err","console","log","hits","list","map","webformatURL","likes","views","comments","downloads","tags","index","join","onLoadMoreClick","scrollToNewImages","addEventListener","newImages","scrollIntoView","block","behavior"],"mappings":";AAWA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAXA,MAAMA,EAAW,2BACXC,EAAM,qCAEZ,SAASC,EAAWC,EAAOC,GAClBC,OAAAA,SACFL,+CAAsDG,UAAcC,qBAAwBH,KAC/FK,KAAKC,GAAYA,EAASC,QAGfN,IAAAA,EAAAA,EAEf,QAAA,QAAA;;ACoGC,aA/GD,IAAA,EAAA,EAAA,QAAA,iBA+GC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7GD,MAAMO,EAAO,CACXC,UAAWC,SAASC,cAAc,cAClCC,QAASF,SAASC,cAAc,YAChCE,eAAWC,EACXC,gBAAYD,EACZE,iBAAaF,GAGf,IAAIX,EAAO,EACPc,EAAc,GAOlB,SAASC,IAOPV,EAAKC,UAAUU,mBAAmB,aANpB,mNAShB,SAASC,EAASC,GAChBA,EAAEC,iBAEFL,EAAcI,EAAEE,cAAcC,SAASC,MAAMvB,MAAMwB,OACnDL,EAAEE,cAAcC,SAASC,MAAMvB,MAAQ,GACvCC,EAAO,EAEFc,IAEDT,EAAKI,QAAQe,WAAWC,SAC1BpB,EAAKI,QAAQiB,UAAY,GACzBrB,EAAKQ,YAAYc,WAGRb,EAAAA,EAAAA,SAAAA,EAAad,GACrBE,KAAK0B,GAAUC,EAAWD,IAC1B1B,KAAK,KAGG,IAAA,EAFHG,EAAKI,QAAQqB,SAASL,OACxBM,KAEA1B,EAAKI,QAAQiB,UAAY,YACPC,QAAlBtB,EAAAA,EAAKQ,mBAAac,IAAAA,GAAAA,EAAAA,YAGrBK,MAAMC,GAAOC,QAAQC,IAAIF,KAG9B,SAASJ,GAAW,KAAEO,IACdC,MAAAA,EAAOD,EACVE,IACC,EAAGC,aAAAA,EAAcC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,EAAWC,KAAAA,GAAQC,oDACrB7C,8FAEDuC,WAAsBK,8KAKpDJ,8HAIAC,2HAIAC,kIAIAC,kDAKTG,KAAK,KAERzC,EAAKI,QAAQO,mBAAmB,YAAaqB,GAG/C,SAASU,EAAgB7B,GACvBlB,GAAQ,GAEGc,EAAAA,EAAAA,SAAAA,EAAad,GACrBE,KAAK0B,GAAUC,EAAWD,IAC1B1B,KAAK8C,GACLhB,MAAMC,GAAOC,QAAQC,IAAIF,IAG9B,SAASF,IACP1B,EAAKI,QAAQO,mBACX,WACC,uDAEHX,EAAKQ,YAAcN,SAASC,cAAc,qBAC1CH,EAAKQ,YAAYoC,iBAAiB,QAASF,GAG7C,SAASC,IACHE,IAAAA,EAAY3C,SAASC,6BAA6BR,OACtDkD,EAAUC,eAAe,CAAEC,MAAO,QAASC,SAAU,WAErDnB,QAAQC,IAAI,eAAgBe,GAjG9BnC,IACAV,EAAKO,WAAaL,SAASC,cAAc,WAEzCH,EAAKO,WAAWqC,iBAAiB,SAAUhC","file":"src.f7adf4dc.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '22993210-edd192b19fd9d2ee0b0d8e9c4';\n\nfunction fetchImage(value, page) {\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${value}&page=${page}&per_page=12&key=${KEY}`,\n  ).then(response => response.json());\n}\n\nexport default fetchImage;\n\n// `${BASE_URL}?image_type=photo&orientation=horizontal&q=что_искать&page=номер_страницы&per_page=12&key=${KEY}`,\n","import fetchImage from './apiService';\n\nconst refs = {\n  container: document.querySelector('.container'),\n  gallery: document.querySelector('.gallery'),\n  searchBtn: undefined,\n  searchForm: undefined,\n  loadMoreBtn: undefined,\n};\n\nlet page = 1;\nlet searchValue = '';\n\nrenderForm();\nrefs.searchForm = document.querySelector('.search');\n\nrefs.searchForm.addEventListener('submit', onSubmit);\n\nfunction renderForm() {\n  const form = `\n  <form class=\"search\" >\n    <input class=\"search__input\" type=\"text\" name=\"query\" autocomplete=\"off\" placeholder=\"Enter word\" />\n    <button type=\"submit\" class=\"search__btn\">Search</button>\n   </form>`;\n\n  refs.container.insertAdjacentHTML('afterbegin', form);\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  searchValue = e.currentTarget.elements.query.value.trim();\n  e.currentTarget.elements.query.value = '';\n  page = 1;\n\n  if (!searchValue) return;\n\n  if (refs.gallery.childNodes.length) {\n    refs.gallery.innerHTML = '';\n    refs.loadMoreBtn.remove();\n  }\n\n  fetchImage(searchValue, page)\n    .then(images => showImages(images))\n    .then(() => {\n      if (refs.gallery.children.length) {\n        addLoadMoreBtn();\n      } else {\n        refs.gallery.innerHTML = 'Try again';\n        refs.loadMoreBtn?.remove();\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction showImages({ hits }) {\n  const list = hits\n    .map(\n      ({ webformatURL, likes, views, comments, downloads, tags }, index) => `\n      <li class=\"gallery__item\" data-page='${page}'>\n        <div class=\"gallery__img-wrapper\">\n          <img  class=\"gallery__img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n        </div>\n        <div class=\"gallery__stats-wrapper\">\n          <p class=\"gallery__stats\">\n            <i class=\"material-icons\">thumb_up</i>\n            ${likes}\n          </p>\n          <p class=\"gallery__stats\">\n            <i class=\"material-icons\">visibility</i>\n            ${views}\n          </p>\n          <p class=\"gallery__stats\">\n            <i class=\"material-icons\">comment</i>\n            ${comments}\n          </p>\n          <p class=\"gallery__stats\">\n            <i class=\"material-icons\">cloud_download</i>\n            ${downloads}\n          </p>\n        </div>\n      </li>`,\n    )\n    .join(' ');\n\n  refs.gallery.insertAdjacentHTML('beforeend', list);\n}\n\nfunction onLoadMoreClick(e) {\n  page += 1;\n\n  fetchImage(searchValue, page)\n    .then(images => showImages(images))\n    .then(scrollToNewImages)\n    .catch(err => console.log(err));\n}\n\nfunction addLoadMoreBtn() {\n  refs.gallery.insertAdjacentHTML(\n    'afterend',\n    `<button class=\"load-more-button\">Load more</button>`,\n  );\n  refs.loadMoreBtn = document.querySelector('.load-more-button');\n  refs.loadMoreBtn.addEventListener('click', onLoadMoreClick);\n}\n\nfunction scrollToNewImages() {\n  let newImages = document.querySelector(`[data-page='${page}']`);\n  newImages.scrollIntoView({ block: 'start', behavior: 'smooth' });\n\n  console.log('newImages = ', newImages);\n}\n"]}